{
  "hash": "d38e224a58ca4d7d204c48086cde3f75",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"mRNA\"\n---\n\n\n\n\nAll data manipulation was done before the start of this quarto manuscript project. Code is in: C:/Users/alosvendsen/OneDrive - Syddansk Universitet/PhD/R_code/manuscript_1 And copied to this project: /notebooks/qPCR/old_qPCR_import\n\nDonor 1: timepoints = 72 and 120 hours\nDonor 2: timepoints = 24, 72, and 120 hours\nDonor 2: timepoints = 24, 72, and 120 hours\n\n## Setup\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n#| warning: false\n#| message: false\n\ngroundhog.date <- \"2024-01-01\"\ngroundhog::meta.groundhog(date = groundhog.date)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\u001b[1;36mNow using 'groundhog_3.1.2'.\u001b[0m\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| warning: false\n#| message: false\n\npckgs <- c(\"here\",\n           \"data.table\",\n           \"ggplot2\")\n\ngroundhog.library(pkg = pckgs, date = groundhog.date)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nhere() starts at C:/Users/alosvendsen/Documents/R/manuscript_one\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\u001b[36mSuccessfully attached 'here_1.0.1'\u001b[0m\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\u001b[36mSuccessfully attached 'data.table_1.14.10'\u001b[0m\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\u001b[36mSuccessfully attached 'ggplot2_3.4.4'\u001b[0m\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| warning: false\n#| message: false\n\nsource(here(\"notebooks/qPCR/custom_functions.R\"))\n```\n:::\n\n\n\n\n## Finalize the data and save the data table\n\n### Load data, remove 0.001 ng/ml cytokine concentrations, calculate means for each experiment. \n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n#### Load data, filter data and calculate geometric means\ndata <- readRDS(here(\"notebooks/qPCR/data_processed/final_dataframe.rds\"))\n\n# Remove the lowest concentrations of cytokines, since not used in all \n# Experiments. Note 24 hour time points was only used in one experiment\nplot_data <- data[!treatment %chin% c(\"0.001 ng/ml IL-1B\", \"0.001 ng/ml IL-6\")]\n\n\n# Calculate the mean expression grouped by experiment, condition, treatment, and time. USE GEOMETRIC MEAN when averaging normalized expression (RQ) values. \nplot_data[,\n          bio_group_mean_expression := geometric_mean(normalized_expression),\n          by = .(experiment, condition, treatment, time, target)\n          ]\n\n# Save the data\nsaveRDS(plot_data, here(\"notebooks/qPCR/data_final_for_plotting/plot_data.rds\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nrmv <- ls()[!grepl(x =ls(), pattern = \"geometric\")]\n\nrm(list = rmv)\n```\n:::\n\n\n\n\n\n## Plots\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nplot_data <- readRDS(here(\"notebooks/qPCR/data_final_for_plotting/plot_data.rds\"))\n```\n:::\n\n\n\n\n#### 3A4 IL-6\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# Subset for 3A4 and IL-6\ncyp3A4_IL6 <- plot_data[treatment != \"0.0001% BSA\" & condition == \"IL-6\" & target == \"CYP3A4\"]\ncyp3A4_IL6[,\n           time_means := geometric_mean(bio_group_mean_expression),\n           by = .(treatment, time)\n           ]\n```\n:::\n\n::: {#cell-fig-mrna-3a4-il6 .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-mrna-3a4-il6\n#| fig-cap: \"Small points are mean of three donors for 72 and 120 hours, and two donors for 24 hours\"\n\nggplot(data = cyp3A4_IL6, aes(x = treatment, y = time_means, color = factor(time))) +\n  geom_point() +\n  stat_summary(fun = \"mean\", geom = \"point\", color = \"black\", size = 5, alpha = 0.5) +\n  geom_hline(yintercept = 1) +\n  labs(title = \"CYP3A4 mRNA expression relative to vehicle control after IL-6 treatment\") +\n  ylab(\"Relative mRNA expression\") +\n  xlab(\"Treatment\")\n```\n\n::: {.cell-output-display}\n![Small points are mean of three donors for 72 and 120 hours, and two donors for 24 hours](mRNA_files/figure-jats/fig-mrna-3a4-il6-1.png){#fig-mrna-3a4-il6}\n:::\n:::\n\n::: {#cell-fig-mrna-120hours .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-mrna-120hours\n#| fig-cap: \"Means of each donor for just 120 hours. Donor one had way higher Cq values\"\n\nggplot(data = cyp3A4_IL6[time == 120], aes(x = treatment, y = bio_group_mean_expression)) +\n  geom_point(aes(color = experiment))\n```\n\n::: {.cell-output-display}\n![Means of each donor for just 120 hours. Donor one had way higher Cq values](mRNA_files/figure-jats/fig-mrna-120hours-1.png){#fig-mrna-120hours}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# #### Load data, filter data and calculate geometric means\n# data <- readRDS(here(\"notebooks/qPCR/data_processed/final_dataframe.rds\"))\n# \n# # Remove the lowest concentrations of cytokines, since not used in all\n# # Experiments. Note 24 hour time points was only used in one experiment\n# plotting_data <- data[!treatment %chin% c(\"0.001 ng/ml IL-1B\", \"0.001 ng/ml IL-6\")]\n# \n# \n# # Calculate the mean expression grouped by experiment, condition, treatment, and time. USE GEOMETRIC MEAN when averaging normalized expression (RQ) values.\n# plotting_data[, bio_group_mean_expression := geometric_mean(normalized_expression), by = .(experiment, condition, treatment, time, target)]\n# \n# # Subset for 3A4 and IL-6\n# plotting_data_1B <- plotting_data[treatment != \"0.0001% BSA\" & condition == \"IL-1B\" & target == \"CYP3A4\"]\n# \n# plotting_data_1B[, time_means := geometric_mean(bio_group_mean_expression), by = .(treatment, time)]\n# \n# \n# ggplot(data = plotting_data_1B, aes(x = treatment, y = time_means, color = factor(time))) +\n#   geom_point() +\n#   stat_summary(fun = \"mean\", geom = \"point\", color = \"black\", size = 5, alpha = 0.5) +\n#   geom_hline(yintercept = 1) +\n#   labs(title = \"CYP3A4 mRNA expression relative to vehicle control after IL-1B treatment\") +\n#   ylab(\"Relative mRNA expression\") +\n#   xlab(\"Treatment\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# # Create base plot. Set data = Null, to assign the data later.\n# base_plot <-\n#   ggplot(\n#     data = NULL,\n#     mapping = aes(\n#       x = treatment,\n#       y = mean_expression,\n#       color = factor(time),\n#       fill = factor(time)\n#     )\n#   ) +\n#   geom_point(shape = 21, \n#              size = 3, \n#              color = \"black\", \n#              alpha = 0.6,\n#              stroke = 1.5\n#              ) +\n#   scale_fill_viridis_d() +\n#   stat_summary(\n#     fun = geometric_mean,\n#     na.rm = TRUE, \n#     color = \"black\",\n#     alpha = 0.5,\n#     size = 1.75\n#   ) +\n#   geom_hline(yintercept = 1) +\n#   theme_bw() +\n#   theme(axis.text = element_text(size = 15),\n#         axis.text.x = element_text(angle = 45, hjust = 1),\n#         strip.text = element_text(size = 15),\n#         axis.title.x  = element_text(size = 20, margin = margin(t = 20)),\n#         axis.title.y = element_text(size = 20, margin = margin(r = 20))\n#         )\n# \n# # Filter data for the first condition (e.g., \"IL-6\")\n# data_3A4_condition1 <- data_3A4[condition == \"IL-6\" & !treatment == \"0.001 ng/ml IL-6\", ]\n# base_plot$data <- data_3A4_condition1\n# base_plot\n# plot_3A4 <- base_plot\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# # Filter data for the first condition (e.g., \"IL-6\")\n# data_3A4_condition1 <- data_3A4[condition == \"IL-6\", ]\n# \n# # Plot for the first condition\n# ggplot(data_3A4_condition1, aes(x = treatment, y = mean_expression, color = factor(time))) +\n#   geom_point() +\n#   theme_bw() +\n#   labs(title = \"Condition: IL-6\",\n#        x = \"Treatment\",\n#        y = \"Mean Expression\",\n#        color = \"Time (hours)\") +\n#   theme(axis.text.x = element_text(angle = 45, hjust = 1))\n# ```\n# \n# ```{r}\n# # Filter for CYP enzymes only\n# cyp_data <- data[target %like% \"CYP\"]\n# \n# # Split data based on condition\n# cyp_data_IL6 <- cyp_data[condition == \"IL-6\"]\n# cyp_data_IL1B <- cyp_data[condition == \"IL-1B\"]\n# \n# # Define a function to create the plot\n# create_plot <- function(cyp_data) {\n#   # Calculate mean normalized expression for each combination of CYP enzyme, treatment, and experiment\n#   cyp_means <- cyp_data[, .(mean_normalized_expression = mean(normalized_expression)), \n#                         by = .(experiment, treatment, target, time)]\n# \n#   # Calculate the overall mean across experiments\n#   cyp_overall_means <- cyp_means[, .(overall_mean_normalized_expression = mean(mean_normalized_expression)), \n#                                  by = .(treatment, target, time)]\n# \n#   # Create and return the plot\n#   ggplot() +\n#     geom_point(data = cyp_means, aes(x = treatment, y = mean_normalized_expression, color = target), alpha = 0.5) +\n#     geom_point(data = cyp_overall_means, aes(x = treatment, y = overall_mean_normalized_expression), \n#                color = \"black\", size = 3, shape = 18) +\n#     facet_wrap(~ target + time, ncol = 3) +\n#     labs(x = \"Treatment\", y = \"Mean Normalized Expression\") +\n#     theme_minimal() +\n#     theme(axis.text.x = element_text(angle = 45, hjust = 1))\n# }\n# \n# # Create plots\n# plot_IL6 <- create_plot(cyp_data_IL6)\n# plot_IL1B <- create_plot(cyp_data_IL1B)\n# \n# # You can now view, save, or further manipulate these plots:\n# plot_IL6\n# plot_IL1B\n```\n:::\n",
    "supporting": [
      "mRNA_files\\figure-jats"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}